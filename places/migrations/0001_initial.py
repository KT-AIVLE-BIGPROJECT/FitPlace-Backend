# Generated by Django 3.2 on 2022-12-27 01:54

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Congestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_nm', models.CharField(max_length=50)),
                ('area_congest_lvl', models.CharField(max_length=50)),
                ('area_ppltn_min', models.IntegerField()),
                ('area_ppltn_max', models.IntegerField()),
                ('now', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_code', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('photo', models.TextField()),
                ('search_region', models.CharField(max_length=50)),
                ('search_category', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('nearest_hotplace', models.CharField(blank=True, max_length=100, null=True)),
                ('rating', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5.0)])),
                ('tel', models.CharField(blank=True, max_length=16, null=True)),
                ('age_10', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('age_20', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('age_30', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('age_40', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('age_50', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('age_60', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('gender_male', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('gender_female', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('mbti_is', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('mbti_in', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('mbti_es', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('mbti_en', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('review_summary1', models.CharField(max_length=100, null=True)),
                ('review_summary_cnt1', models.IntegerField()),
                ('review_summary2', models.CharField(max_length=100, null=True)),
                ('review_summary_cnt2', models.IntegerField()),
                ('review_summary3', models.CharField(max_length=100, null=True)),
                ('review_summary_cnt3', models.IntegerField()),
                ('review1', models.TextField()),
                ('review2', models.TextField()),
                ('review3', models.TextField()),
                ('review4', models.TextField()),
                ('review5', models.TextField()),
                ('review6', models.TextField()),
                ('review7', models.TextField()),
                ('review8', models.TextField()),
                ('review9', models.TextField()),
                ('review10', models.TextField()),
                ('review_blog_count', models.IntegerField()),
                ('review_visitor_count', models.IntegerField()),
                ('review_keywords', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecParam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_code', models.CharField(max_length=50)),
                ('age_10', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('age_20', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('age_30', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('age_40', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('age_50', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('age_60', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('gender_male', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('gender_female', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('mbti_is', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('mbti_in', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('mbti_es', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('mbti_en', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('restaurant_korea', models.BooleanField(default=False)),
                ('restaurant_west', models.BooleanField(default=False)),
                ('restaurant_china', models.BooleanField(default=False)),
                ('restaurant_japan', models.BooleanField(default=False)),
                ('restaurant_fast', models.BooleanField(default=False)),
                ('restaurant_bunsik', models.BooleanField(default=False)),
                ('cafe_cafe', models.BooleanField(default=False)),
                ('cafe_dessert', models.BooleanField(default=False)),
                ('cafe_bakery', models.BooleanField(default=False)),
                ('leisure_gallery', models.BooleanField(default=False)),
                ('leisure_craft', models.BooleanField(default=False)),
                ('leisure_popup', models.BooleanField(default=False)),
                ('leisure_theater', models.BooleanField(default=False)),
                ('leisure_book', models.BooleanField(default=False)),
                ('leisure_department', models.BooleanField(default=False)),
                ('walking_park', models.BooleanField(default=False)),
                ('walking_market', models.BooleanField(default=False)),
                ('walking_street', models.BooleanField(default=False)),
            ],
        ),
    ]
